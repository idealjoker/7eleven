$D711::Switch[9]  = 'SW_L_outlane';                     
$D711::Switch[10] = 'SW_L_inlane';
$D711::Switch[11] = 'SW_L_sling';
$D711::Switch[12] = 'SW_lower_L_standup';
$D711::Switch[13] = 'SW_1_target';
$D711::Switch[14] = 'SW_eject';
$D711::Switch[15] = 'SW_middle_L_standup';
$D711::Switch[16] = 'SW_upper_L_standup';
$D711::Switch[17] = 'SW_L_drop_1';
$D711::Switch[18] = 'SW_L_drop_2';
$D711::Switch[19] = 'SW_L_drop_3';
$D711::Switch[20] = 'SW_L_drop_complete';
$D711::Switch[21] = 'SW_L_drop_standup';
$D711::Switch[22] = 'SW_snake';
$D711::Switch[23] = 'SW_middle_lower_standup';
$D711::Switch[24] = 'SW_middle_upper_standup';
$D711::Switch[25] = 'SW_A_lane';
$D711::Switch[26] = 'SW_B_lane';
$D711::Switch[27] = 'SW_C_lane';
$D711::Switch[28] = 'SW_pf_tilt';
$D711::Switch[29] = 'SW_spinner';
$D711::Switch[30] = 'SW_2_target';
$D711::Switch[31] = 'SW_3_target';
$D711::Switch[32] = 'SW_4_target';
$D711::Switch[33] = 'SW_R_outlane';
$D711::Switch[34] = 'SW_R_inlane';
$D711::Switch[35] = 'SW_R_sling';
$D711::Switch[36] = 'SW_L_pop';
$D711::Switch[37] = 'SW_top_pop';
$D711::Switch[38] = 'SW_bot_pop';
$D711::Switch[39] = 'SW_R_drop_standup';
$D711::Switch[40] = 'SW_R_drop_1';
$D711::Switch[41] = 'SW_R_drop_2';
$D711::Switch[42] = 'SW_R_drop_3';
$D711::Switch[43] = 'SW_R_drop_complete';

$D711::Lamp[0x00] = 'L_shoot_again_pf';
$D711::Lamp[0x01] = 'L_L_outlane';
$D711::Lamp[0x02] = 'L_R_outlane';
$D711::Lamp[0x03] = 'L_2x';
$D711::Lamp[0x04] = 'L_3x';
$D711::Lamp[0x05] = 'L_star_1';
$D711::Lamp[0x06] = 'L_star_2';
$D711::Lamp[0x07] = 'L_bonus_1k';
$D711::Lamp[0x08] = 'L_bonus_2k';
$D711::Lamp[0x09] = 'L_bonus_3k';
$D711::Lamp[0x0A] = 'L_bonus_4k';
$D711::Lamp[0x0B] = 'L_bonus_5k';
$D711::Lamp[0x0C] = 'L_bonus_6k';
$D711::Lamp[0x0D] = 'L_bonus_7k';
$D711::Lamp[0x0E] = 'L_bonus_8k';
$D711::Lamp[0x0F] = 'L_bonus_9k';
$D711::Lamp[0x10] = 'L_bonus_overflow';
$D711::Lamp[0x11] = 'L_bonus_10k';
$D711::Lamp[0x12] = 'L_bonus_20k';
$D711::Lamp[0x13] = 'L_A_lane';
$D711::Lamp[0x14] = 'L_B_lane';
$D711::Lamp[0x15] = 'L_C_lane';
$D711::Lamp[0x16] = 'L_L_inlane';
$D711::Lamp[0x17] = 'L_R_inlane';
$D711::Lamp[0x18] = 'L_1_target';
$D711::Lamp[0x19] = 'L_2_target';
$D711::Lamp[0x1A] = 'L_3_target';
$D711::Lamp[0x1B] = 'L_4_target';
$D711::Lamp[0x1C] = 'L_1_arrow';
$D711::Lamp[0x1D] = 'L_2_arrow';
$D711::Lamp[0x1E] = 'L_3_arrow';
$D711::Lamp[0x1F] = 'L_4_arrow';
$D711::Lamp[0x20] = 'L_magnet_5k';
$D711::Lamp[0x21] = 'L_magnet_10k';
$D711::Lamp[0x22] = 'L_magnet_20k';
$D711::Lamp[0x23] = 'L_magnet_30k';
$D711::Lamp[0x24] = 'L_magnet_50k';
$D711::Lamp[0x25] = 'L_pop_top';
$D711::Lamp[0x26] = 'L_pop_left';
$D711::Lamp[0x27] = 'L_pop_bottom';
$D711::Lamp[0x28] = 'L_gar_5k';
$D711::Lamp[0x29] = 'L_gor';
$D711::Lamp[0x2A] = 'L_gar';
$D711::Lamp[0x2B] = 'L_eject_10k';
$D711::Lamp[0x2C] = 'L_eject_15k';
$D711::Lamp[0x2D] = 'L_eject_eb';
$D711::Lamp[0x2E] = 'L_F_gor_gar'; # used as a flag
$D711::Lamp[0x2F] = 'L_spinner';

$D711::BitGroup[0x00] = 'B_bonus';
$D711::BitGroup[0x01] = 'B_X';
$D711::BitGroup[0x02] = 'B_1_4_target';
$D711::BitGroup[0x03] = 'B_snake';
$D711::BitGroup[0x04] = 'B_eject';
$D711::BitGroup[0x05] = 'B_ABC';
$D711::BitGroup[0x06] = 'B_outlane_specials';
$D711::BitGroup[0x07] = 'B_1_4_arrow';

$D711::Sol[0] = 'S_outhole';
$D711::Sol[1] = 'S_eject';
$D711::Sol[2] = 'S_gar';
$D711::Sol[3] = 'S_gor';
$D711::Sol[4] = 'S_magnet';
$D711::Sol[5] = 'S_snake_lamps';
$D711::Sol[13] = 'S_knocker';

$D711::SolOp[0] = 'SO_gar';
$D711::SolOp[1] = 'SO_gor';
$D711::SolOp[2] = 'SO_magnet';
$D711::SolOp[3] = 'SO_snake_lamps';
$D711::SolOp[4] = 'SO_magnet_and_knocker'; # idk why knocker is in there?
$D711::SolOp[7] = 'SO_gar_gor';

$D711::Sound[0x01] = 'SND_tilt_warning';
$D711::Sound[0x05] = 'SND_100';
$D711::Sound[0x0A] = 'SND_10';
$D711::Sound[0x0F] = 'SND_10k';
$D711::Sound[0x0D] = 'SND_ABC_Complete';
$D711::Sound[0x12] = 'SND_start_heartbeat';
$D711::Sound[0x13] = 'SND_stop_heartbeat';
$D711::Sound[0x1B] = 'SND_Credit';

$D711::SoundCmd[9] = 'SC_ABC_Complete';
$D711::SoundCmd[10] = 'SC_Special';

$D711::Flag[0x00] = 'F_L_outlane_control';
$D711::Flag[0x01] = 'F_R_outlane_control';
$D711::Flag[0x02] = 'F_outlane_special_lit';
$D711::Flag[0x03] = 'F_L_drops_complete';
$D711::Flag[0x04] = 'F_ABC_complete_handler_9_'; # ?
$D711::Flag[0x05] = 'F_1234_complete';
$D711::Flag[0x06] = 'F_DE_complete';
$D711::Flag[0x07] = 'F_trigger_heartbeat';
$D711::Flag[0x08] = 'F_pulse_snake_lamps';
$D711::Flag[0x0A] = 'F_special_awarded';
$D711::Flag[0x0B] = 'F_ABC_complete';
$D711::Flag[0x0D] = 'F_ABC_complete_handler_pending'; # turned on along with B, turned off when B handler starts
$D711::Flag[0x0F] = 'F_snake_top_award_'; #seems to be just like 50k but with a knocker? set by completing GOR while 50k already lit

$D711::Adj[01] = 'A_outlane_special';
$D711::Adj[02] = 'A_eject';
$D711::Adj[03] = 'A_EB_1234';
$D711::Adj[04] = 'A_1234_special';
$D711::Adj[05] = 'A_bgm';

# gameEvent_1_handler = GOR complete logic
# gameEvent_2_handler = target special collect logic
# gameEvent_3_handler = DE complete logic
# gameEvent_4_handler = pulse snake lamps
# gameEvent_5_handler = 1234 complete logic
# gameEvent_6_handler = ABC complete logic
# gameEvent_7_handler = gor+gar complete
# gameEvent_8_handler = periodic heartbeat?
# game_background_handler_6441 = stop heartbeat (drain, tilt, etc)
# SW_B_lane_handler_64DF = jmp sys_PinOp
# gameEvent_1_handler_64E2 = jmp sys_testBit
# gameEvent_7_handler_6491 = given a lamp in A, blink it or the next lowest lit lamp
# SW_B_lane_handler_6504 = advance bonus 3x
# gameEvent_5_handler_6520 = jmp sys_soundCmd
# _GameVarE0 = starts semi-randomly, 
# $6550 = should be labeled as part of gameEvent_4_handler