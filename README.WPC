======================================================================
                    R E A D M E . W P C 
                    doc: Wed Aug 28 09:00:38 2024
                    dlm: Sat Aug 31 13:36:22 2024
                    (c) 2024 A.M. Thurnherr
                    uE-Info: 41 32 NIL 0 0 72 2 2 4 NIL ofnI
======================================================================

=Truth Values=

- CC means previous test succeeded
- truth value syscalls marked with ? at end (e.g. bitSet?)

----------------------------------------------------------------------

=Lamps and Flags (Bits)=

	Byte Value		7eleven     
	----------------------------
	$00-$3F 		Lamp#01-40  
	$40-$7F 		Flag#01-40  
	$80-$BF 		illegal
	$C0-$FF         Flag#41-80  


-Blinking-

- use setBit, bitSet? syscalls with blink buffer offset ($40)
	!setBit L_Lock_left $40
	!bitSet? L_EscapeRoute_10M $40


-Bit Buffers / Lamp Matrices-

	offset	meaning
	------------------------------------------------------------
	$00 	logical matrix
	$08 	primary lamp matrix (used for blinking?)
	$10 	masked from primary ($08)
	$18 	override data
	$20 	masked from previous ($08,$18)
	$28 	override data
	$30 	masked from previous ($08,$18,$28)
	$38 	override data
	$40 	blink matrix
	$48 	Flag#01-40
	$50     Flag#41-80

----------------------------------------------------------------------

=Bit Groups=

- 1 byte id
- 1 byte buffer offset
	$00		lamps
	$40		blink buffer

sys_bitgroupOp_ABXY
	A	ROM page of hook routine
	B	0C(rotLeft) 0E(fill), 04(???)
	X	bitgroup + buffer offset
	Y	address of hook routine


======================================================================

=Bit Shifter=

<9EA5>  sys_check_BitShifter_input:
<9EA5>          CMPA    #$40								; Flag or lamp number 01-40?
<9EA7>          BHI     .label_9EAF
<9EA9>          CMPB    #$48								; yes: =FLAGS buffer?
<9EAB>          BNE     .return_okay						; 	no:  Lamp#01 - Lamp#40 okay
<9EAD>          BRA     .return_error						; 	yes: flag byte <= $41 not okay
<9EAF>  .label_9EAF:										; A_in >= $41
<9EAF>          CMPB    #$48								; =FLAGS buffer?
<9EB1>          BNE     .return_error						; 	no: LAMP#41 - Lamp#FF not okay
<9EB3>          BITA    #$40								; Flag#40-7F or Flag#C0-CF?
<9EB5>          BEQ     .return_error						;	no: illegal flag number
<9EB7>          ANDA    #$BF								; A_in >= $80? (Flag#C0-CF)
<9EB9>          _IF_MI
<9EBB>              ANDA    #$7F							; A := Flag#00-40
<9EBD>              LDB     #$50							; use =FLAGS_HIGH
<9EBF>          _ENDIF
<9EBF>  .return_okay:
<9EBF>          ANDCC   #$FE								; CLC
<9EC1>          BRA     >RTS
<9EC3>  .return_error:
<9EC3>          !Error $16
<9EC7>          ORCC    #$01								; SEC
<9EC9>          RTS


Buffers:
	$1F		=???			not at all common, tracing syscalls
	$27		=SWITCHES		tracing CC=switchClosed
	$2E0	=LAMPS			tracing lampOn
	$2E8	=LAMPS_ALT?		routine at 9EF1
	$320	=BLINK_FLAG?	2E0+40
	$328	=FLAGS			2E0+48		Flag#01-40
	$330	=FLAGS_HIGH		2E0+50		Flag#C0-100
	
