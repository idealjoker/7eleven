{\rtf1\ansi\ansicpg1252\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica-Oblique;\f1\fswiss\fcharset0 Helvetica-Bold;\f2\fswiss\fcharset0 Helvetica;
\f3\fnil\fcharset0 Menlo-Regular;\f4\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\csgray\c0;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid202\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid4}
{\list\listtemplateid5\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid5}
{\list\listtemplateid6\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid501\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid6}
{\list\listtemplateid7\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid601\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid7}
{\list\listtemplateid8\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid701\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid702\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid8}
{\list\listtemplateid9\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid801\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid802\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid803\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li2160\lin2160 }{\listname ;}\listid9}
{\list\listtemplateid10\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid901\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid902\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid10}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}{\listoverride\listid5\listoverridecount0\ls5}{\listoverride\listid6\listoverridecount0\ls6}{\listoverride\listid7\listoverridecount0\ls7}{\listoverride\listid8\listoverridecount0\ls8}{\listoverride\listid9\listoverridecount0\ls9}{\listoverride\listid10\listoverridecount0\ls10}}
\margl1440\margr1440\vieww20000\viewh12820\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\i\fs24 \cf0 This document describes the Williams Virtual Machine (WVM) that was written by Larry DeMar and is used in all Sys 7, Sys 9 and Sys 11 games. System 6 and WPC games do not use the WVM.
\f1\i0\b \
\
\
Overview (CPU Modes, Threads, Pinball Data Types)\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f2\b0 \cf0 The Williams Virtual Machine (WVM) consists of a multi-threading system and a byte-code interpreter designed for Pinball programming. Multithreading greatly simplifies the event-driven coding that is needed in particular for multiball games. The high-level operations result in much smaller code and game code that is easier to write, read and maintain. The WVM is designed to look like a 2nd CPU with the programmer switching between the two CPUs at any time. In 7eleven this is called \'93mode switching\'94 where the Motorola assembly operations (e.g. LDAA)  are available in M6800 mode and the WVM operations (e.g. blinkLamps)  are available in WVM mode. To make the modes explicit, capital letters are used for assembly operations and mixed case is used for the WVM. The most important CPU registers, including the program counter (PC), stack pointer (SP) and the two accumulators (A and B) are shared by the two CPUs (one virtual). On the other hand, every thread has its own A and B registers, as well as a private stack. \
\
The WVM is not a real-time operating system. Threads cannot be interrupted and therefore must sleep frequently. The sleep times, measured in 1/64th of a second \'93tics\'94, are minimum times \'97 when many threads are running  \'93simultaneously\'94 (up to around 30 in some later Sys 11 games) the threads are often delayed considerably beyond their requested sleep time.  Since the WVM imposes a very significant performance penalty it is used less frequently in later Sys 11 games, which have a lot of high-speed lamp, flasher and display FX. \
\
The WVM supports Pinball game devices \'97 switches, lamps and solenoids \'97 as primitive data types, allowing compile-time type checking and improving readability of the programs. In addition to the two CPU registers A and B, the WVM supports 14 additional registers, also as primitive data types. There are additional types for flags (lamps without bulbs), bit groups (lamp strings and flag groups), adjustments and sounds. Lamps have multiple uses in solid state pinball games: in addition to indicating the state of the game (how many bonus earned, which features enabled, \'85) they are also used for effects (FX). In order to make this \'93easy\'94 each lamp in WVM is controlled by bits in 4 different buffers. In addition to FX this also allows simple coding of grace-periods, for example. \
\
\

\f1\b Thread Ids/Flags\
\

\f2\b0 Each thread has an id byte, which does not have to be unique. At game start, the system kills all threads except those with an id with bit $08 set. Similarly, the system kills all threads except those with bit $02 set on end-of-ball conditions and all except those with bit $04 set on tilts. On a ball drain, the system does not start end-of-ball processing until all threads with b it $01 set have disappeared. Thread id $06 is used for most temporary threads; these threads are protected from being killed at the end of a ball and on tilts, but they are killed when a new game is started, perhaps interrupting a running game. The lower nibble of the thread id indicates how protected the thread is from being killed by the system:\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f3\fs22 \cf2 \CocoaLigature0 Thread id	 Killing Conditions				Protection        \
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
x0-x1         always killed                   unprotected\
x2-x3         killed on START | TILT          protected from EOB\
x4-x5         killed on START | EOB           protected from TILT\
x6-x7         killed on START                 protected from EOB & TILT\
x8-xF         NOT KILLED BY SYSTEM            protected\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f2\fs24 \cf0 \CocoaLigature1 \
Threads are spawned either with an explicit id or as generic Thread#06. A running thread can change its id with the 
\f3\fs22 \cf2 \CocoaLigature0 setThreadFlags 
\f2\fs24 \cf0 \CocoaLigature1 WVM operation. Switch-handler threads that are spawned by the system either run as Thread#00 (unprotected) or Thread#04 (protected from tilt) depending on whether bit $04 in the flats in the switch table is set or not. \
\
The thread killing operations (system calls in M6800 mode and primary operations in WVM mode) take both a thread id and a mask as arguments. Only the bits that are set in the mask are used to select the threads to kill. Therefore, the WCM operation 
\f3\fs22 \cf2 \CocoaLigature0 killThreads #$08 Thread#00 
\f2\fs24 \cf0 \CocoaLigature1 kills all threads with ids with bit $08 (1st argument, which is the mask) equal to zero (second argument, which is the thread id). This is the operation that is executed by the system whenever a new game is started. 
\f1\b \
\
\
CPU Mode Switching\
\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural\partightenfactor0
\ls1\ilvl0
\f2\b0 \cf0 {\listtext	\uc0\u8226 	}switch from M6800 to WVM mode with the M6800 macro  
\f0\i _WVM_MODE\
{\listtext	\uc0\u8226 	}
\f2\i0 switch from WVM to M6800 mode with the WVM instruction 
\f0\i M6800_mode\
\ls1\ilvl0
\f2\i0 {\listtext	\uc0\u8226 	}force compiler into WVM mode with the compiler pragma 
\f0\i .WVM_MODE\
\ls1\ilvl0
\f2\i0 {\listtext	\uc0\u8226 	}there are other WVM operations that change the mode, e.g. 
\f0\i jumpSubroutine6800
\f2\i0 \
{\listtext	\uc0\u8226 	}some games (e.g. Pin Bot) have game routines that switch the mode; these must be determined using manual analysis to allow correct disassembly\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\

\f1\b Registers (Data Type)\
\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural\partightenfactor0
\ls2\ilvl0
\f2\b0 \cf0 {\listtext	\uc0\u8226 	}Reg-A and Reg-B: mirrors of Motorola CPU accumulators A and B\
{\listtext	\uc0\u8226 	}Reg-C to Reg-H: \'93permanent\'94 registers that keep their values from ball to ball\
{\listtext	\uc0\u8226 	}Reg-I to Reg-P: \'93volatile\'94 registers that are reset to zero at the beginning of every ball\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \

\f1\b \
Lamps (Data Type)\
\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural\partightenfactor0
\ls3\ilvl0\cf0 {\listtext	\uc0\u8226 	}
\f2\b0 Lamp#00 to Lamp#3F (64 lamps)\
{\listtext	\uc0\u8226 	}4 buffers control the lamp:\
\pard\tx940\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li1440\fi-1440\pardirnatural\partightenfactor0
\ls3\ilvl1\cf0 {\listtext	\uc0\u8259 	}main buffer: used for feature control (e.g. lock is lit)\
{\listtext	\uc0\u8259 	}alternate buffer: used for lamp FX\
{\listtext	\uc0\u8259 	}buffer-select buffer: selects lamp source between main and alternate buffer\
{\listtext	\uc0\u8259 	}blink buffer: regularly toggles lamp bit in main buffer \
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural\partightenfactor0
\ls3\ilvl0\cf0 {\listtext	\uc0\u8226 	}lamp in main buffer has four different states:\
\pard\tx940\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li1440\fi-1440\pardirnatural\partightenfactor0
\ls3\ilvl1\cf0 {\listtext	\uc0\u8259 	}on and blinking\
{\listtext	\uc0\u8259 	}on and not blinking\
{\listtext	\uc0\u8259 	}off and blinking\
{\listtext	\uc0\u8259 	}off and not blinking\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural\partightenfactor0
\ls3\ilvl0\cf0 {\listtext	\uc0\u8226 	}logically, only three states are of interest:\
\pard\tx940\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li1440\fi-1440\pardirnatural\partightenfactor0
\ls3\ilvl1\cf0 {\listtext	\uc0\u8259 	}on, off and blinking\
{\listtext	\uc0\u8259 	}testing for these is done differently in Sys 7 and Sys 11!\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \

\f1\b \
Flags (Data Type)\
\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural\partightenfactor0
\ls4\ilvl0\cf0 {\listtext	\uc0\u8226 	}
\f2\b0 flags are invisible single-bit game-state variables (lamps without bulbs)
\f1\b \
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural\partightenfactor0
\ls4\ilvl0
\f2\b0 \cf0 {\listtext	\uc0\u8226 	}
\f3\fs22 Flag#00
\f2\fs24   to 
\f3\fs22 Flag#1F
\f2\fs24 : \'93permanent\'94 flags that keep their value from ball to ball\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural\partightenfactor0
\ls4\ilvl0
\f1\b \cf0 {\listtext	\uc0\u8226 	}
\f3\b0\fs22 Flag#20 
\f2\fs24 to 
\f3\fs22 Flag#3F
\f2\fs24 : \'93volatile\'94 flags that are reset to 0 at the start of every ball\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1\b \cf0 \
\
Bit Groups (Data Type)\

\f2\b0 \
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural\partightenfactor0
\ls5\ilvl0\cf0 {\listtext	\uc0\u8226 	}consecutive lamps and flags can be addressed together\
{\listtext	\uc0\u8226 	}bit groups are defined at the label 
\f3\fs22 \cf2 \CocoaLigature0 bitgroup_table
\f2\fs24 \cf0 \CocoaLigature1 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \

\f1\b \
Sounds (Data Type)\

\f2\b0 \
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural\partightenfactor0
\ls6\ilvl0
\f1\b \cf0 {\listtext	\uc0\u8226 	}
\f2\b0 Sound#00 means sound off(?)\
\ls6\ilvl0
\f1\b {\listtext	\uc0\u8226 	}
\f2\b0 Sound#01 is score queue sound of 10s\
\ls6\ilvl0
\f1\b {\listtext	\uc0\u8226 	}
\f2\b0 Sound#07 is score queue sound of 10M\
\ls6\ilvl0
\f1\b {\listtext	\uc0\u8226 	}
\f2\b0 sounds are defined at the label 
\f3\fs22 \cf2 \CocoaLigature0 sound_table
\f1\b\fs24 \cf0 \CocoaLigature1 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\
Game Adjustments (Data Type)\
\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural\partightenfactor0
\ls7\ilvl0
\f2\b0 \cf0 {\listtext	\uc0\u8226 	}Adj#00 - Adj#16\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural\partightenfactor0
\ls7\ilvl0
\f1\b \cf0 {\listtext	\uc0\u8226 	}
\f2\b0 adjustments are defined at label 
\f3\fs22 \cf2 \CocoaLigature0 game_adjustments_table
\f1\b\fs24 \cf0 \CocoaLigature1 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\
Solenoids (Data Type)\

\f2\b0 \
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural\partightenfactor0
\ls8\ilvl0\cf0 {\listtext	\uc0\u8226 	}solenoid commands:\
\pard\tx940\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li1440\fi-1440\pardirnatural\partightenfactor0
\ls8\ilvl1\cf0 {\listtext	\uc0\u8259 	}
\f3\fs22 \cf2 \CocoaLigature0 Sol_GI_playfield:on\{solCmd\}    \'97 M6800 mode needs a \{solCmd\} type specifier\
\ls8\ilvl1
\f2\fs24 \cf0 \CocoaLigature1 {\listtext	\uc0\u8259 	}
\f3\fs22 \cf2 \CocoaLigature0 Sol_Doghouse_kickout:4-tictocs \'97 WVM mode does not
\f2\fs24 \cf0 \CocoaLigature1 \
{\listtext	\uc0\u8259 	}1 tictoc = 2 tics = 1/32 sec\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural\partightenfactor0
\ls8\ilvl0\cf0 {\listtext	\uc0\u8226 	}System 11 solenoids:\
\pard\tx940\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li1440\fi-1440\pardirnatural\partightenfactor0
\ls8\ilvl1\cf0 {\listtext	\uc0\u8259 	}Sol#00 - Sol#07: switched solenoids 1A-8A\
{\listtext	\uc0\u8259 	}Sol#08 - Sol#0F: controlled solenoids 9-16\
{\listtext	\uc0\u8259 	}Sol#10 - Sol#16: special solenoids 17-23\
{\listtext	\uc0\u8259 	}Sol#17	    : flipper relay\
{\listtext	\uc0\u8259 	}Sol#18 - Sol#1F: switched solenoids 1C-8C\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1\b \cf0 \
\
Switches (Data Type)\
\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural\partightenfactor0
\ls9\ilvl0
\f2\b0 \cf0 {\listtext	\uc0\u8226 	}Switch#00 - Switch#3F\
{\listtext	\uc0\u8226 	}switches are defined at the label 
\f3\fs22 \cf2 \CocoaLigature0 switch_table\
\pard\tx940\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li1440\fi-1440\pardirnatural\partightenfactor0
\ls9\ilvl1
\f2\fs24 \cf0 \CocoaLigature1 {\listtext	\uc0\u8259 	}flag byte\
\pard\tx1660\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li2160\fi-2160\pardirnatural\partightenfactor0
\ls9\ilvl2\cf0 {\listtext	\uc0\u8259 	}
\f3\fs22 \cf2 \CocoaLigature0 $08     spawn handler when switch opens \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\ls9\ilvl2\CocoaLigature1 {\listtext	
\f4 \uc0\u8259 
\f3 	}\CocoaLigature0 $10     spawn handler when switch closes\
\ls9\ilvl2\CocoaLigature1 {\listtext	
\f4 \uc0\u8259 
\f3 	}\CocoaLigature0 $20     ignore switch when _gameOver is true\
\ls9\ilvl2\CocoaLigature1 {\listtext	
\f4 \uc0\u8259 
\f3 	}\CocoaLigature0 $40     ignore switch when _ballTilted or _Ball_has_drained is true \
\ls9\ilvl2\CocoaLigature1 {\listtext	
\f4 \uc0\u8259 
\f3 	}\CocoaLigature0 $80     exclude from switch health monitoring / disable switch(?)\
\pard\tx940\tx1440\tx2160\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li1440\fi-1440\pardirnatural\partightenfactor0
\ls9\ilvl1\CocoaLigature1 {\listtext	
\f4 \uc0\u8259 
\f3 	}
\f2\fs24 \cf0 handler pointer (except when flag bits $01, $02 and $04 are all zero)\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1\b \cf0 \
\
Score Values (Data Type)\
\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural\partightenfactor0
\ls10\ilvl0
\f2\b0 \cf0 {\listtext	\uc0\u8226 	}encoded as multiplier (0-31) times 10^exponent (0-7)\
{\listtext	\uc0\u8226 	}post-score PTS token is optional\
{\listtext	\uc0\u8226 	}explicit syntax: \
\pard\tx940\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li1440\fi-1440\pardirnatural\partightenfactor0
\ls10\ilvl1\cf0 {\listtext	\uc0\u8259 	}3x1K PTS		; 3,000 points\
{\listtext	\uc0\u8259 	}3x1K			; 3,000 points\
{\listtext	\uc0\u8259 	}30x100 PTS		; 3,000 points, useful with score queues\
{\listtext	\uc0\u8259 	}1x10M PTS		; 10,000,000 points\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural\partightenfactor0
\ls10\ilvl0\cf0 {\listtext	\uc0\u8226 	}implicit syntax:\
\pard\tx940\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li1440\fi-1440\pardirnatural\partightenfactor0
\ls10\ilvl1\cf0 {\listtext	\uc0\u8259 	}3000 PTS		; 3,000 points\
{\listtext	\uc0\u8259 	}3000			; 3,000 points\
{\listtext	\uc0\u8259 	}10M			; 10,000,000 points\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural\partightenfactor0
\ls10\ilvl0\cf0 {\listtext	\uc0\u8226 	}M6800 mode\
\pard\tx940\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li1440\fi-1440\pardirnatural\partightenfactor0
\ls10\ilvl1\cf0 {\listtext	\uc0\u8259 	}\{ScoreByte\} must be used\
{\listtext	\uc0\u8259 	}PTS token not allowed\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1\b \cf0 \
\
\

\f2\b0 \
\
}