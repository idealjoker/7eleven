#======================================================================
#                    F O O 
#                    doc: Fri May 31 11:52:25 2024
#                    dlm: Sun Feb 16 12:54:54 2025
#                    (c) 2023 idealjoker@mailbox.orgXSxsq
#                    uE-Info: 19 0 NIL 0 0 72 0 2 4 NIL ofnI
#======================================================================

# HISTORY:
#	Feb 16, 2025: - re-created from [C711.BitMask]

# NOTES:
#	- when this routine is called, lamps and flags have already
#	  been substituted
#	- the code here is only for arguments #2, #3, etc.

sub InvBitMask($$)
{
    my($args,$line) = @_;

	my($mask);
	foreach my $str (split('[,|]',$args)) {
		if (defined($ALIAS{$str})) {
			$ALIAS_REFD{$str}++;
			$str = $ALIAS{$str};
		}
		if ($str =~ m{^Lamp#([0-9A-Fa-f]{2})$}) {
			my($byte,$bit) = (substr($1,0,1),substr($1,1,1));
			$bit = hex($bit); $bit-=8 if ($bit > 7);
			die("Invalid lamp number at input line $line\n")
				if ($byte > 3 || $bit > 7);
			$mask |= 0xFF - (1<<$bit);
		} elsif ($str =~ m{^Flag#([0-9A-Fa-f]{2})$}) {
			my($byte,$bit) = (substr($1,0,1),substr($1,1,1));
			$bit = hex($bit); $bit-=8 if ($bit > 7);
			die("Invalid flag number at input line $line\n")
				if ($byte > 3 || $bit > 7);
			$mask |= 0xFF - (1<<$bit);
		} else {
			die("Invalid argument <$str> for {BitMask} at input line $line\n")
				unless numberp($str) && ($str>=0);
			my($bit) = $str % 8;
			$mask |= 0xFF - (1<<$bit);
	    }
	}
	return $mask;
}

1;

