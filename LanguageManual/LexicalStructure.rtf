{\rtf1\ansi\ansicpg1252\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica-Oblique;\f1\fswiss\fcharset0 Helvetica-Bold;\f2\fswiss\fcharset0 Helvetica;
\f3\fnil\fcharset0 Monaco;\f4\fnil\fcharset0 Menlo-Regular;\f5\froman\fcharset0 Times-Roman;
\f6\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;}
{\*\expandedcolortbl;;\csgenericrgb\c0\c0\c0;\csgenericrgb\c100000\c100000\c100000;}
\margl1440\margr1440\vieww20000\viewh12820\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\i\fs24 \cf0  This document describes the lexical structure of the 7eleven language.
\f1\i0\b \
\
Source Files \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f2\b0 \cf0 The 7eleven compiler takes single ASCII files as input with the file extension indicating the Williams System for which the source is for (.s6, .s7, .s11, .WPC).  Line termination can either follow Windows or UNIX convention. In order to compile code that is split between multiple source files the linker must be used.
\f1\b \
\
\
Lines and Statements
\f2\b0 \
\
Every 7eleven statement sequence consists of one or more lines in the source file.  (A statement sequence can either be a single statement or multiple statements separated by the \'91&\'92 single-character token.) If more than one line is required, a backslash character (\\) can be inserted anywhere between the last code character on the line and either the end of the line or the start of any comment on the same line.  Except in strings (see below), a semicolon character (;) starts a comment which extends to the end of the line. \
\
Every source line that starts a new statement can additionally have an optional hexadecimal ROM reference in triangular brackets at the beginning of the line \'97 this reference is ignored by the compiler unless -A is used. For system 6-11 the ROM references are 4-digit (2-byte) hexadecimal addresses, e.g. <7FD2>. Since WPC uses ROM paging, the address is prepended by the 2-digit hexadecimal ROM page id, e.g. <3B:4301>. ROM page id FF is used for the two pages (nominal ids 3E and 3F) that are always mapped into the CPU address range (prime real estate area).\
\
After removing the optional ROM address and comments, all source lines that make up a 7eleven statement sequence are spliced together. If the resulting statement sequence starts with a !! prefix, compilation optimization is disabled for the first statement in the sequence.  \
\
If the first token (separated by white space) of the statement sequence ends with a colon character (:), it is interpreted as a label definition. Labels are allowed to contain many printable ASCII characters, including colons. The characters ; \{ and \} are disallowed in labels.  Labels must not start with ( ) < > |  ` or #. In order to avoid confusion the characters + - & | !  should not be used in labels. Label-only statements are allowed. \
\
The remaining tokens up to but not including any & token comprise the instruction, which consists of an operation and its arguments. All tokens after a & are re-assembled into a new statement sequence that is processed as described above.  \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 Any argument can be repeated by adding a suffix of [<num>x]. This is useful primarily of data definition statements such as the following definition from  Pin Bot:\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f3\fs20 \cf2 \cb3 \CocoaLigature0 			auto_adjustment_data:  .DB $00[3x] $01[38x] $02[20x] $03[20x] $04[21x]
\f2\fs24 \cf0 \cb1 \CocoaLigature1 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
For string-definition operations (.STR, .S7R, \'85), single quote characters (\'91) are used as delimiters for the single string argument. For all other operations white space is used to separate the statement tokens.\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1\b \cf0 Aliases
\f2\b0 \
\
7eleven supports a number of pinball-specific data types, such as switches, solenoids and lamps. The names of the corresponding variables are fixed \'97 the 64 possible lamps, for example, are named 
\f4\fs22 Lamp#00 
\f2\fs24 to 
\f4\fs22 Lamp#3F
\f2\fs24  where the last two digits are the hexadecimal lamp number starting from zero. (Hexadecimal is used because it maps easily onto the 8x8 lamp matrix.) Since it is not convenient to remember the lamp numbers, lamps can be named by inserting the following statement near the beginning of the source file:\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f3\fs20 \cf2 \cb3 \CocoaLigature0 			.DEFINE  L_DogHouse   Lamp#1E
\f2\fs24 \cf0 \cb1 \CocoaLigature1 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 With this definition in place, all \'93Lamp#1E\'94 strings in the source file can be replaced by \'93L_DogHouse\'94, greatly clarifying the code. \
\
The 7eleven disassembler can handle naming of the pinball assets automatically. To do so, it needs\expnd0\expndtw0\kerning0
 a file with the names of the game switches and lamps, which can be taken from \
\pard\pardeftab720\sa240\partightenfactor0
\cf0 the game manual. Here is a snippet from a file
\f5  
\f6\fs26 BadCats.defs
\f5\fs24  
\f2 as illustrations:
\f5 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f3\fs20 \cf2 \cb3 \kerning1\expnd0\expndtw0 \CocoaLigature0 			defSwitch(22,'SW_Doghouse_Kickbig');\
			defSwitch(23,'SW_Enter_Tiger_Ramp');\
			defSwitch(24,'SW_Fish_Collect');\
\
\pard\pardeftab720\sa240\partightenfactor0

\f2\fs24 \cf0 \cb1 \expnd0\expndtw0\kerning0
\CocoaLigature1 The switch numbers -- 22, 23 and 24 in this example -- are those listed in the operator manual. The lamps can be defined in a similar way:
\f3\fs20 \cf2 \cb3 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 			defLamp(1,'L_MeowAgain');\
			defLamp(2,'L_bonus_2x');\
			defLamp(3,'L_bonus_3x');	
\f6\fs26 \cf0 \cb1 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\pard\pardeftab720\partightenfactor0
\cf0 \
\pard\pardeftab720\sa240\partightenfactor0

\f2\fs24 \cf0 This file can be supplied to the disassembly script via the -i option: \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f3\fs20 \cf2 \cb3 \kerning1\expnd0\expndtw0 \CocoaLigature0 			disassemble_s11 -g -i BadCats.defs ic26.128 ic27.256 > BadCats.s11\cf0 \cb1 \expnd0\expndtw0\kerning0
\CocoaLigature1       \
\pard\pardeftab720\partightenfactor0
\cf0    
\f2\fs24 \kerning1\expnd0\expndtw0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1\b \cf0 \
Numbers and ROM References
\f2\b0 \
\
Unsigned numerical values can be specified as decimals (no prefix), hexadecimals ($ prefix) or binary numbers (% prefix). Signed values must be specified as decimals. \
\
For system 6-11, ROM references are simply 2-byte addresses (unsigned numbers) usually specified as 4-digit hexadecimals. Since WPC uses ROM paging, ROM references require both page ids (1-byte) and ROM addresses (2-bytes), where the address range of the paged ROM is $4000-7FFF. \
}