#======================================================================
#                    C 7 1 1 . W P C 
#                    doc: Mon May 26 08:07:03 2025
#                    dlm: Mon Jun  2 06:57:07 2025
#                    (c) 2025 idealjoker@mailbox.org
#                    uE-Info: 13 71 NIL 0 0 72 2 2 4 NIL ofnI
#======================================================================

# HISTORY:
#	May 26, 2025: - created
#	May 27, 2025: - BUG: %SYSCALL used wrong key
#	May 29, 2025: - added code_addr()
#	Jun  1, 2025: - BUG: code_addr() returned wrong address in prime RE
# HISTORY END

use strict vars;

our(%SYSCALL,@SC_ADDR,@SC_ARGS,@SC_NOTE,$ADDR);

sub define_syscall($$@)
{
	my($lbl,$addr,$args,$note) = @_;
##	printf(STDERR "define_syscall($lbl,%04X,$args,$note) ->",$addr);
	$args = '' unless defined($args);
	$note = '' unless defined($note);

	define_label($lbl,$addr);
	push(@SC_ADDR,$addr);
	push(@SC_ARGS,$args);
	push(@SC_NOTE,$note);
	$SYSCALL{$lbl} = $#SC_ADDR;
##	print(STDERR "#$#SC_ADDR ($SC_ADDR[$#SC_ADDR]|$SC_ARGS[$#SC_ARGS]|$SC_NOTE[$#SC_NOTE]\n");
}


sub code_addr(@)																			# 1MB ROM -> page address
{
	my($ROM_addr) = @_;
	$ROM_addr = $ADDR unless defined($ROM_addr);
	my($RPG) = int($ROM_addr / 0x4000);
	return ($RPG <= 0x3D) ? ($ROM_addr % 0x4000) + 0x4000
						  : ($ROM_addr - 0x3D*0x4000);
}

1; 
