#======================================================================
#                    D 7 1 1 . W P C _ D M D 
#                    doc: Thu Jul 18 06:34:49 2024
#                    dlm: Sun Aug 11 15:17:48 2024
#                    (c) 2024 idealjoker@mailbox.org
#                    uE-Info: 59 70 NIL 0 0 72 2 2 4 NIL ofnI
#======================================================================

# WPC Disassembly 

# HISTORY:
#	Jul 18, 2024: - created
#	Aug  9, 2024: - imported load_ROM() call
#	Aug 10, 2024: - undid Aug 9 change

#----------------------------------------------------------------------
# WPC API
#----------------------------------------------------------------------

require "$PATH/WPC_DMD.API";

#----------------------------------------------------------------------
# Init Disassembly System
#----------------------------------------------------------------------

sub init_WPC_DMD()
{
	push(@INLINE_ARG_SBR,sprintf('%s-%s-%s','sys_runtime_error','.DB','B'));	# keep in sync with [WPC_DMD.API]
	push(@INLINE_ARG_SBR,sprintf('%s-%s-%s','syscall_82B6','.DB','B'));
	push(@INLINE_ARG_SBR,sprintf('%s-%s-%s','syscall_82F2','.DB','B'));
	push(@INLINE_ARG_SBR,sprintf('%s-%s-%s','syscall_82FF','.DB','B'));
	push(@INLINE_ARG_SBR,sprintf('%s-%s-%s','syscall_8385','.DB','B'));
	push(@INLINE_ARG_SBR,sprintf('%s-%s-%s','syscall_8346','.DB','B'));
	push(@INLINE_ARG_SBR,sprintf('%s-%s-%s','syscall_8319','.DB','B'));
	push(@INLINE_ARG_SBR,sprintf('%s-%s-%s','syscall_83DB','.DB','B'));
	push(@INLINE_ARG_SBR,sprintf('%s-%s-%s','syscall_83E8','.DB','B'));
	push(@INLINE_ARG_SBR,sprintf('%s-%s-%s','syscall_842B','.DB','B'));
	push(@INLINE_ARG_SBR,sprintf('%s-%s-%s','syscall_8480','.DB','B'));
	push(@INLINE_ARG_SBR,sprintf('%s-%s-%s','syscall_848F','.DB','B'));
	push(@INLINE_ARG_SBR,sprintf('%s-%s-%s','syscall_84AD','.DB','B'));
	push(@INLINE_ARG_SBR,sprintf('%s-%s-%s','syscall_8546','.DB','B'));
	push(@INLINE_ARG_SBR,sprintf('%s-%s-%s','syscall_8553','.DB','B'));
	push(@INLINE_ARG_SBR,sprintf('%s-%s-%s','syscall_85B2','.DB','B'));
	push(@INLINE_ARG_SBR,sprintf('%s-%s-%s','syscall_865B','.DW','W'));
	push(@INLINE_ARG_SBR,sprintf('%s-%s-%s','syscall_8679','.DW','W'));
	push(@INLINE_ARG_SBR,sprintf('%s-%s-%s','syscall_8690','.DW','W'));
	push(@INLINE_ARG_SBR,sprintf('%s-%s-%s','syscall_8715','.DW','W'));
	push(@INLINE_ARG_SBR,sprintf('%s-%s-%s','syscall_8722','.DW','W'));
	push(@INLINE_ARG_SBR,sprintf('%s-%s-%s','syscall_88D5','.DW','W'));
	push(@INLINE_ARG_SBR,sprintf('%s-%s-%s','sys_JSRPG','.DWB','R'));
	push(@INLINE_ARG_SBR,sprintf('%s-%s-%s','syscall_89DD','.DWB','WB'));
	push(@INLINE_ARG_SBR,sprintf('%s-%s-%s','syscall_8A9A','.DW','WW'));
	push(@INLINE_ARG_SBR,sprintf('%s-%s-%s','syscall_8AAA','.DW','WW'));
	push(@INLINE_ARG_SBR,sprintf('%s-%s-%s','syscall_8ABA','.DW','WW'));
	push(@INLINE_ARG_SBR,sprintf('%s-%s-%s','syscall_8ACA','.DW','WW'));
	push(@INLINE_ARG_SBR,sprintf('%s-%s-%s','syscall_8B3D','.DBW','BWW'));
	push(@INLINE_ARG_SBR,sprintf('%s-%s-%s','syscall_8B77','.DWWB','WR'));
	push(@INLINE_ARG_SBR,sprintf('%s-%s-%s','syscall_8B9D','.DWWB','WR'));
	push(@INLINE_ARG_SBR,sprintf('%s-%s-%s','syscall_8BF7','.DWWB','WR'));
	push(@INLINE_ARG_SBR,sprintf('%s-%s-%s','syscall_D799','.DWBW','WBW'));
	push(@INLINE_ARG_SBR,sprintf('%s-%s-%s','syscall_FDFC','.DB','B'));
}

#----------------------------------------------------------------------
# Game Disassembly Routine
#----------------------------------------------------------------------

sub disassemble_WPC_DMD()
{
	if (1) {
		$Address = 0xFFF0;														# CPU vectors
		insert_divider($Address,'CPU Vectors');
	
		def_code_ptr('RESERVED_vector','RESERVED_handler','CPU Vector Handler');
		def_code_ptr('SWI3_vector','SWI3_handler','CPU Vector Handler');
		def_code_ptr('SWI2_vector','SWI2_handler','CPU Vector Handler');
		def_code_ptr('FIRQ_vector','FIRQ_handler','CPU Vector Handler');
		def_code_ptr('IRQ_vector','IRQ_handler','CPU Vector Handler');
		def_code_ptr('SWI_vector','SWI_handler','CPU Vector Handler');
		def_code_ptr('NMI_vector','NMI_handler','CPU Vector Handler');
	    def_code_ptr('RST_vector','RST_handler','CPU Vector Handler');
    }

	if (1) {
		$Address = 0x8000;
		insert_divider($Address,'Bank Id');
		def_byte_hex('_ROMPG_ID');

		insert_divider($Address,'System Call Pointers');
		while ($Address < 0x812D) {
			my($taddr) = sprintf('%04X',WORD($Address));
			my($trpg) = sprintf('%02X',BYTE($Address+2));
			def_WPC_codePtr("syscall_${trpg}_$taddr",'System Call');
		}

#		insert_divider($Address,'System Data Pointers');
#		$Address = 0x8133;
#		def_WPC_stringPtr('sysstr_gameName','System String');
#		def_WPC_stringPtr('sysstr_gameNumber','System String');
#		def_WPC_stringPtr('sysstr_buildDate','System String');

#		$Address = 0x81C5;
#		my($addr) = def_ptr('^sys_switchTable');
#		def_WPC_switchTable('sys_switchTable','Switch Table');

#		$Address = 0x8285;
#		my($addr) = def_ptr('^sys_fontTable');
#		def_WPC_fontTable('sys_fontTable','Font Table');

#		$Address = 0x8288;
#		my($addr) = def_ptr('^sys_DMDtable');
#		def_WPC_DMDTable('sys_DMDtable','DMD Table');
	}
}

#----------------------------------------------------------------------
# Post Disassembly Magic
#----------------------------------------------------------------------

sub apply_magic_WPC_DMD($$)
{
	my($fa,$la) = @_;
}

#----------------------------------------------------------------------

1; 																# return true

